pipeline {
  tools {
    maven 'maven3.9.9'
  }

  options {
    buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '3')
    timestamps()
  }

  agent any
  // assumes that the Dagger Cloud token
  // is in a Jenkins credential named DAGGER_CLOUD_TOKEN
  environment {
    DAGGER_VERSION = "0.16.2"
    PATH = "/tmp/dagger/bin:$PATH"
 DAGGER_CLI = '/usr/local/bin/dagger'
  
  }

  stages {
    stage('Git Checkout') {
      steps {
        git 'https://github.com/ChaitanyaVamsi/maven-web-application.git'
      }
    }

    stage('Build with Dagger') {
      steps {
        sh '${DAGGER_CLI} run go run main.go build'
      }
    }

 stage('Build with Dagger') {
  steps {
    sh '${DAGGER_CLI} run --container golang:1.20 go run main.go build'
  }
}

stage('Sonar Scan with Dagger') {
  steps {
    sh '${DAGGER_CLI} run --container golang:1.20 go run main.go sonar'
  }
}

stage('Deploy to Nexus with Dagger') {
  steps {
    sh '${DAGGER_CLI} run --container golang:1.20 go run main.go deployNexus'
  }
}

stage('Deploy to Tomcat with Dagger') {
  steps {
    sh '${DAGGER_CLI} run --container golang:1.20 go run main.go deployTomcat'
  }
}


  }

  post {
    always {
      cleanWs()
    }

    success {
      echo 'Pipeline completed successfully!'
    }

    failure {
      echo 'Pipeline failed! Check logs.'
    }
  }
}
